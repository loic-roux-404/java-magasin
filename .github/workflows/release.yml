name: Bump version and release

on:
    push:
        branches:
            - 'prod'
            - 'master'

jobs:
    artifact:
        strategy:
            matrix:
                java: [ 13 ]
        env:
            MVN_FLAGS: "-Dproperties.java.version=${{ matrix.java }} -B clean"

        name: Publish - GitHub Packages
        if: >
            contains(github.event.head_commit.message, '[skip-release]') == false
            && contains(github.event.pull_request.labels.*.name, 'skip-release') == false
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: '0'
            - name: log commit in common
              run: |
                git fetch origin
                [[ $(git rev-parse --verify HEAD) = $(git rev-parse --verify origin/master) ]] \
                 && echo 'History OK' && exit 0 || echo "history don't match with pre-release" && exit 1

            - name: Semantic Release
              uses: cycjimmy/semantic-release-action@v2
              id: semantic
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
              branches: |
                  [
                    'prod',
                    {
                      name: 'master',
                      prerelease: true
                    }
                  ]
            #-   name: Bump version and push tag
            #    id: tag_version
            #    uses: anothrNick/github-tag-action@1.34.0
            #    env:
            #        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
            #        RELEASE_BRANCHES: prod
            #        DEFAULT_BUMP: minor

            - name: Set up JDK
              uses: actions/setup-java@v1
              with:
                  java-version: ${{ matrix.java }}

            - name: Publish artifact on GitHub Packages
              run: mvn ${MVN_FLAGS} deploy -DskipTests
              env:
                  VERSION: ${{ steps.semantic.outputs.new_release_version }}
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

            #-   name: Create a GitHub release
            #    uses: actions/create-release@v1
            #    env:
            #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #    with:
            #        tag_name: ${{ steps.semantic.outputs.new_release_version }}
            #        release_name: Release ${{ steps.semantic.outputs.new_release_version }}
            #        prerelease: ${{ contains('refs/heads/master', github.ref) }}
